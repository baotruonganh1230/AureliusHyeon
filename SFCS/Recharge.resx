<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>